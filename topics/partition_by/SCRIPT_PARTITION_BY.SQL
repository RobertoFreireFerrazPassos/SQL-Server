-- =============================================
-- GROUP BY and PARTITION_BY in a select statement
-- https://www.sqlshack.com/sql-partition-by-clause-overview/
-- =============================================

SELECT * 
FROM ORDERS
ORDER BY CUSTOMERCITY
GO

SELECT 
    CUSTOMERCITY,
    AVG(ORDERAMOUNT) AS AVG_ORDER_AMOUNT, 
    MIN(ORDERAMOUNT) AS MIN_ORDER_AMOUNT, 
    SUM(ORDERAMOUNT) TOTAL_ORDER_AMOUNT
FROM ORDERS
GROUP BY CUSTOMERCITY;

SELECT 
    CUSTOMERCITY,      
    CUSTOMERNAME,
	ORDERAMOUNT,
    AVG(ORDERAMOUNT) OVER(PARTITION BY CUSTOMERCITY)  AS AVG_ORDER_AMOUNT, 
    MIN(ORDERAMOUNT) OVER(PARTITION BY CUSTOMERCITY)  AS MIN_ORDER_AMOUNT, 
    SUM(ORDERAMOUNT) OVER(PARTITION BY CUSTOMERCITY)  TOTAL_ORDER_AMOUNT
FROM ORDERS

SELECT 
    CUSTOMERCITY,      
    CUSTOMERNAME,
    ROW_NUMBER() OVER(PARTITION BY CUSTOMERCITY ORDER BY ORDERAMOUNT DESC) AS "ROW NUMBER",
	ORDERAMOUNT,
    COUNT(ORDERID) OVER(PARTITION BY CUSTOMERCITY) AS "COUNT OF ORDERS", 
    AVG(ORDERAMOUNT) OVER(PARTITION BY CUSTOMERCITY)  AS AVG_ORDER_AMOUNT, 
    MIN(ORDERAMOUNT) OVER(PARTITION BY CUSTOMERCITY)  AS MIN_ORDER_AMOUNT, 
    SUM(ORDERAMOUNT) OVER(PARTITION BY CUSTOMERCITY)  TOTAL_ORDER_AMOUNT
FROM ORDERS

SELECT 
    CUSTOMERCITY,      
    CUSTOMERNAME,
	ORDERAMOUNT,
	ROW_NUMBER() OVER(PARTITION BY CUSTOMERCITY ORDER BY ORDERAMOUNT DESC) AS "ROW NUMBER",
	CONVERT(VARCHAR(20), SUM(ORDERAMOUNT) OVER(PARTITION BY CUSTOMERCITY ORDER BY ORDERAMOUNT DESC ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING),1) AS 'CUMULATIVE TOTAL'
FROM ORDERS